# Generated by Django 5.2.3 on 2025-06-27 12:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Agency Staff',
                'verbose_name_plural': 'Agency Staff',
            },
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(db_index=True, max_length=254)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True)),
                ('contact_number', models.CharField(blank=True, db_index=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], default='other', max_length=10)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('restrict_communication', models.BooleanField(default=False)),
                ('unique_code', models.CharField(blank=True, max_length=256, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('anniversary', models.DateField(blank=True, null=True)),
                ('visites', models.IntegerField(default=0)),
                ('last_visit', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('first_name', models.CharField(db_index=True, max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(db_index=True, max_length=30, verbose_name='Last Name')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email address')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('contact_number', models.CharField(blank=True, max_length=30, null=True)),
                ('business_type', models.CharField(choices=[('business', 'Single Location Business'), ('enterprises', 'Multiple Location Business'), ('marketing', 'Marketing Agency')], default='business', max_length=200)),
                ('is_active', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('email_alert', models.BooleanField(default=False)),
                ('sms_alert', models.BooleanField(default=False)),
                ('daily_dining_display_report', models.BooleanField(default=True, verbose_name='Display Rating Report')),
                ('daily_city_brand_channel_wise_average_rating_email_alert', models.BooleanField(default=False)),
                ('weekly_city_brand_channel_wise_average_rating_email_alert', models.BooleanField(default=False)),
                ('monthly_city_brand_channel_wise_average_rating_email_alert', models.BooleanField(default=False)),
                ('daily_city_brand_channel_wise_no_of_rating_email_alert', models.BooleanField(default=False)),
                ('weekly_city_brand_channel_wise_no_of_rating_email_alert', models.BooleanField(default=False)),
                ('monthly_city_brand_channel_wise_no_of_rating_email_alert', models.BooleanField(default=False)),
                ('daily_summary_rating_email_alert', models.BooleanField(default=False)),
                ('weekly_summary_rating_email_alert', models.BooleanField(default=False)),
                ('monthly_summary_rating_email_alert', models.BooleanField(default=False)),
                ('daily_outlet_wise_channel_wise_ratings_email_alert', models.BooleanField(default=False)),
                ('weekly_outlet_wise_channel_wise_ratings_email_alert', models.BooleanField(default=False)),
                ('monthly_outlet_wise_channel_wise_ratings_email_alert', models.BooleanField(default=False)),
                ('daily_critical_review_email_alert', models.BooleanField(default=False)),
                ('weekly_critical_review_email_alert', models.BooleanField(default=False)),
                ('monthly_critical_review_email_alert', models.BooleanField(default=False)),
                ('daily_detailed_review_email_alert', models.BooleanField(default=False)),
                ('weekly_detailed_review_email_alert', models.BooleanField(default=False)),
                ('monthly_detailed_review_email_alert', models.BooleanField(default=False)),
                ('daily_overall_issue_email_alert', models.BooleanField(default=False)),
                ('weekly_overall_issue_email_alert', models.BooleanField(default=False)),
                ('monthly_overall_issue_email_alert', models.BooleanField(default=False)),
                ('daily_summary_issue_email_alert', models.BooleanField(default=False)),
                ('weekly_summary_issue_email_alert', models.BooleanField(default=False)),
                ('monthly_summary_issue_email_alert', models.BooleanField(default=False)),
                ('daily_consolidated_email_alert', models.BooleanField(default=False)),
                ('weekly_consolidated_email_alert', models.BooleanField(default=False)),
                ('monthly_consolidated_email_alert', models.BooleanField(default=False)),
                ('daily_brand_wise_rating_summary_email_alert', models.BooleanField(default=False)),
                ('weekly_brand_wise_rating_summary_email_alert', models.BooleanField(default=False)),
                ('monthly_brand_wise_rating_summary_email_alert', models.BooleanField(default=False)),
                ('daily_brand_wise_tag_summary_email_alert', models.BooleanField(default=False)),
                ('weekly_brand_wise_tag_summary_email_alert', models.BooleanField(default=False)),
                ('monthly_brand_wise_tag_summary_email_alert', models.BooleanField(default=False)),
                ('daily_offline_qr_code_report', models.BooleanField(default=False)),
                ('weekly_offline_qr_code_report', models.BooleanField(default=False)),
                ('monthly_offline_qr_code_report', models.BooleanField(default=False)),
                ('daily_star_rating_email_alert', models.BooleanField(default=False)),
                ('weekly_star_rating_email_alert', models.BooleanField(default=False)),
                ('monthly_star_rating_email_alert', models.BooleanField(default=False)),
                ('weekly_digest', models.BooleanField(default=False, help_text='Weekly Outlet wise Email Alert - NPS, Sources Status, Response Status, Ticket Status, Top Negative and Positive Reviews')),
                ('daily_digest', models.BooleanField(default=False, help_text='Daily Outlet wise Email Alert - NPS, Sources Status, Response Status, Ticket Status,Top Negative and Positive Reviews')),
                ('ratings_alert', models.CharField(blank=True, choices=[('1', 'ONE_RATING'), ('2', 'TWO_RATING'), ('3', 'THREE_RATING'), ('4', 'FOUR_RATING'), ('5', 'FIVE_RATING')], null=True)),
                ('alerts_schedule', models.CharField(blank=True, choices=[('DAY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], null=True)),
                ('enable_review_reply', models.BooleanField(default=False)),
                ('enable_ticket_creation', models.BooleanField(default=False)),
                ('enable_offline_forms', models.BooleanField(default=False)),
                ('enable_customer_care_forms', models.BooleanField(default=False)),
                ('enable_swiggy_forms', models.BooleanField(default=False)),
                ('enable_zomato_forms', models.BooleanField(default=False)),
                ('enable_magic_pin_forms', models.BooleanField(default=False)),
                ('enable_ticket_activity', models.BooleanField(default=False)),
                ('enable_ticket_assign', models.BooleanField(default=False)),
                ('enable_ticket_close', models.BooleanField(default=False)),
                ('send_emergency_mail', models.BooleanField(default=True)),
                ('send_qr_report_mail', models.BooleanField(default=False)),
                ('enable_mention_action', models.BooleanField(default=False)),
                ('daily_complaint_report_email_alert', models.BooleanField(default=False)),
                ('weekly_complaint_report_email_alert', models.BooleanField(default=False)),
                ('monthly_complaint_report_email_alert', models.BooleanField(default=False)),
                ('send_complaint_email', models.BooleanField(default=False)),
                ('whatsapp_alert', models.BooleanField(default=False)),
                ('zomato_complaint_button', models.BooleanField(default=False)),
                ('swiggy_complaint_button', models.BooleanField(default=False)),
                ('whatsapp_alert_options', models.CharField(blank=True, choices=[('1', 'Whatsapp_Alerts_Negative_Reviews_All_Content'), ('2', 'Whatsapp_Alerts_Negative_Reviews_Only_With_Content'), ('3', 'Whatsapp_Alerts_Neutral_Reviews_All_Content'), ('4', 'Whatsapp_Alerts_Neutral_Reviews_Only_With_Content'), ('5', 'Whatsapp_Alerts_Complaints_All_Content')], null=True)),
                ('enable_sr_module', models.BooleanField(blank=True, null=True)),
                ('out_stock_email_alert', models.BooleanField(blank=True, default=True, null=True)),
                ('offline_store_email_alert', models.BooleanField(blank=True, default=True, null=True)),
                ('last_otp', models.CharField(blank=True, max_length=10, null=True)),
                ('has_two_factor_auth', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_contact_page', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_listing_product', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_marketplace', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_whatsapp', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_review', models.BooleanField(blank=True, default=True, null=True)),
                ('enable_social', models.BooleanField(blank=True, default=False, null=True)),
                ('enable_complaint_refund', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teams', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
